
项目开发 TODO 列表：React 鼓机
阶段一：项目初始化与核心结构
[✓] 创建新的 React 项目 (如果尚未创建，使用 Vite 创建 react-drum-machine 项目，并安装依赖)

操作: npm create vite@latest react-drum-machine -- --template react-ts (或 --template react), cd react-drum-machine, npm install

[✓] 清理初始项目文件 (移除 Vite 和 React 初始模板中不需要的文件和代码)

依赖: 创建新的 React 项目

操作: 删除 src/App.css, src/index.css, src/assets 文件夹，修改 src/main.jsx 和 src/App.jsx。

[✓] 定义鼓垫数据 (创建 drumPads.js 文件，包含所有鼓垫的 keyTrigger, id, url)

操作: 在 src/data 目录下创建 drumPads.js，定义包含 9 个鼓垫信息的数组。

[✓] 创建 DrumMachine 主组件 (设置 div#drum-machine 和 div#display 的 JSX 结构，并在 App.jsx 中引用)

操作: 在 src/components 下创建 DrumMachine.jsx，构建主容器和显示区，并在 App.jsx 中渲染。

[✓] 创建 DrumPad 子组件 (为每个鼓垫创建独立组件，包含 div.drum-pad 和 audio.clip 元素，接收 keyTrigger, id, url props)

操作: 在 src/components 下创建 DrumPad.jsx，定义组件结构和 props。

[✓] 在 DrumMachine 中渲染所有鼓垫 (使用 drumPads 数据数组，动态渲染 9 个 DrumPad 组件)

依赖: 定义鼓垫数据, 创建 DrumMachine 主组件, 创建 DrumPad 子组件

操作: 在 DrumMachine 中导入 drumPads 和 DrumPad，使用 map 渲染。

阶段二：音频播放与显示功能
[ ] 实现点击播放音频功能 (为 .drum-pad 添加 onClick 事件，播放其子 audio 元素)

依赖: 创建 DrumPad 子组件

操作: 在 DrumPad 组件中使用 useRef 获取 audio 引用，并在 onClick 中调用 audioRef.current.play()。

[ ] 实现键盘按键播放音频功能 (添加全局 keydown 事件监听器，根据按键触发对应鼓垫的音频)

依赖: 在 DrumMachine 中渲染所有鼓垫

操作: 在 DrumMachine 中使用 useEffect 监听 keydown 事件，通过 document.getElementById() 找到并播放音频。

[ ] 更新显示区域 (Display) (当音频播放时，在 #display 元素中显示当前音频剪辑的名称)

依赖: 实现点击播放音频功能, 实现键盘按键播放音频功能

操作: 在 DrumMachine 中使用 useState 管理显示文本，通过 prop 传递给 DrumPad 或在键盘事件中直接更新。

阶段三：样式与最终调整
[ ] 添加基本样式 (为鼓机界面添加 CSS 样式，包括布局、鼓垫外观和 :active 状态)

依赖: 创建 DrumMachine 主组件, 创建 DrumPad 子组件

操作: 创建 CSS 文件，为 #drum-machine, #display, .drum-pad 添加样式。
